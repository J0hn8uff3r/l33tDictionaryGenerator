import argparse

complex = {
    '0': ['o', 'O', '()', '*', '0', '¤', '°', 'ø', 'Ω', 'ο'],
    '1': ['i', 'I', 'l', '!', '|', '¦', '¡', ']', '['],
    '2': ['s', 'S', '$', '5', 'z', '§'],
    '3': ['b', 'B', '8', '|3', '6', 'P>', 'ß', '13', 'I3', 'IX', ']3', ']8', ']]3', '|3', '|8', '|:', '!3', '(3', '/3', ')3', 'β'],
    '4': ['a', 'A', '@', ' /\\', '/-\\', ' ^ ', '∂', 'λ', 'α', 'ci', 'Z'],
    '5': ['s', 'S', '$', '5', 'z', '§', 'ehs', 'es', 'ez'],
    '6': ['b', 'B', '|3', 'P>', 'ß', '13', 'I3', 'IX', ']3', ']8', ']]3', '|3', '|8', '|:', '!3', '(3', '/3', ')3', 'β'],
    '7': ['j', 'J', ',|', '_|', '_/', ']', '¿', '(/', '_7', '_)', 'ʝ', 'τ'],
    '8': ['b', 'B', '8', '|3', '6', 'P>', 'ß', '13', 'I3', 'IX', ']3', ']8', ']]3', '|3', '|:', '!3', '(3', '/3', ')3', 'β'],
    '9': ['g', 'G', '&', '(_+', '(_>', '6', '9', '[[6', 'C-', 'gee', '(γ,', '(_-', 'cj', 'q', 'Q', '(,)', '0,', '0.', '0_', '<|', '¶', '(_,)', '()_', 'cue', 'O,', '(),', 'φ'],
    'a': ['A', '4', '@', '/\\', '/-\\', '^', '∂', 'λ', 'α', 'ci', 'Z'],
    'A': ['a', '4', '@', '/\\', '/-\\', '^', '∂', 'λ', 'α', 'ci', 'Z'],
    'b': ['B', '8', '|3', '6', 'P>', 'ß', '13', 'I3', 'IX', ']3', ']8', ']]3', '|3', '|8', '|:', '!3', '(3', '/3', ')3', 'β'],
    'B': ['b', '8', '|3', '6', 'P>', 'ß', '13', 'I3', 'IX', ']3', ']8', ']]3', '|3', '|8', '|:', '!3', '(3', '/3', ')3', 'β'],
    'c': ['C', '(', 'k', 'K', '<', '[', '{', '¢', '©', 'ς'],
    'C': ['c', '(', 'k', 'K', '<', '[', '{', '¢', '©', 'ς'],
    'd': ['D', '[)', '[>', '[}', ']])', 'o|', '|)', '|>', '|}', 'Ð', 'ð', '|o', '∂', '])', 'T)', '0', 'cl', 'δ'],
    'D': ['d', '[)', '[>', '[}', ']])', 'o|', '|)', '|>', '|}', 'Ð', 'ð', '|o', '∂', '])', 'T)', '0', 'cl', 'δ'],
    'e': ['E', '&', '3', '€', '£', 'ë', '[-', '|=-', 'ə', 'ε'],
    'E': ['e', '&', '3', '€', '£', 'ë', '[-', '|=-', 'ə', 'ε'],
    'f': ['F', 'ph', 'pH', 'Ph', 'PH', ']]=', '|/\"', '|#', '|=', 'ƒ', ']=', '}', '(=', 'I='],
    'F': ['f', 'ph', 'pH', 'Ph', 'PH', ']]=', '|/\"', '|#', '|=', 'ƒ', ']=', '}', '(=', 'I='],
    'g': ['G', '&', '(_+', '(_>', '6', '9', '[[6', 'C-', 'gee', '(γ,', '(_-', 'cj'],
    'G': ['g', '&', '(_+', '(_>', '6', '9', '[[6', 'C-', 'gee', '(γ,', '(_-', 'cj'],
    'h': ['H', '#', '(-)', ')-(', '/-/', '4', '<~>', '[-]', '\-\\', ']-[', ']~[', '{-}', '{=}', '|-|', '|~|', '}{', ':-:', '}-{', 'н'],
    'H': ['h', '#', '(-)', ')-(', '/-/', '4', '<~>', '[-]', '\-\\', ']-[', ']~[', '{-}', '{=}', '|-|', '|~|', '}{', ':-:', '}-{', 'н'],
    'i': ['I', 'l', '!', "'", '1', '[]', '][', '|', '¦', '¡', ':', ']', '[', 'ι'],
    'I': ['i', 'l', '!', "'", '1', '[]', '][', '|', '¦', '¡', ':', ']', '[', 'ι'],
    'j': ['J', ',|', '7', '_|', '_/', ']', '¿', '(/', '_7', '_)', 'ʝ'],
    'J': ['j', ',|', '7', '_|', '_/', ']', '¿', '(/', '_7', '_)', 'ʝ'],
    'k': ['K', '(', 'c', 'C', ']{', '|(', '|<', '|\(', '|\{', '|{', '}<', '|X', 'ɮ', 'κ'],
    'K': ['k', '(', 'c', 'C', ']{', '|(', '|<', '|\(', '|\{', '|{', '}<', '|X', 'ɮ', 'κ'],
    'l': ['L', '1', '!', 'i', '#', '1', '][_', '|', '|_', '£', '1_', 'lJ', '¬', 'ℓ'],
    'L': ['l', '1', '!', 'i', '#', '1', '][_', '|', '|_', '£', '1_', 'lJ', '¬', 'ℓ'],
    'm': ['M', '(\/)', '(u)', '.\\'+'\\', '//.', '/V\\', '/\/\\', '/\\'+'\\'+'/\\'+'\\', 'ITI', 'IVI', '[V]', '[\/]', '[]V[]', '\\'+'\\'+'\\', '][\\'+'\\'+'//][', '^^', '{V}', '|\/|', '|\\'+'\\'+'/|', '|v|', 'em', ']V[', '(T)', 'nn', '//\\'+'\\'+'//\\'+'\\', '(V)', '/|\\', '/|/|', '/^^\\', '[]\/[]', '|^^|', 'м'],
    'M': ['m', '(\/)', '(u)', '.\\'+'\\', '//.', '/V\\', '/\/\\', '/\\'+'\\'+'/\\'+'\\', 'ITI', 'IVI', '[V]', '[\/]', '[]V[]', '\\'+'\\'+'\\', '][\\'+'\\'+'//][', '^^', '{V}', '|\/|', '|\\'+'\\'+'/|', '|v|', 'em', ']V[', '(T)', 'nn', '//\\'+'\\'+'//\\'+'\\', '(V)', '/|\\', '/|/|', '/^^\\', '[]\/[]', '|^^|', 'м'],
    'n': ['N', '(\)', '//', '/\/', '/\\'+'\\'+'/', '/|/,|1', '<\>', '[\]', '[]\[]', '][\][', ']\[', '^/', '{\}', '|\\'+'\\'+'|', '|\|', '//\\'+'\\'+'//', '[]\\', '/V', '₪', '~', 'η'],
    'N': ['n', '(\)', '//', '/\/', '/\\'+'\\'+'/', '/|/,|1', '<\>', '[\]', '[]\[]', '][\][', ']\[', '^/', '{\}', '|\\'+'\\'+'|', '|\|', '//\\'+'\\'+'//', '[]\\', '/V', '₪', '~', 'η'],
    'o': ['O', '()', '*', '0', '9', '<>', '[]', '¤', '°', 'ø', 'oh', 'Ω', 'ο'],
    'O': ['o', '()', '*', '0', '9', '<>', '[]', '¤', '°', 'ø', 'oh', 'Ω', 'ο'],
    'p': ['P', '[]D', '][D', '^', '|\\"', '|*', '|>', '|?', '|D', '|o', '|°', '|²', '|º', '|^(o)', '|"', '9', '|̊', '|7', 'q', 'þ', '¶', 'ρ'],
    'P': ['p', '[]D', '][D', '^', '|\\"', '|*', '|>', '|?', '|D', '|o', '|°', '|²', '|º', '|^(o)', '|"', '9', '|̊', '|7', 'q', 'þ', '¶', 'ρ'],
    'q': ['Q', '(,)', '0,', '0.', '0_', '9', '<|', '¶', '(_,)', '()_', 'cue', 'O,', '(),', 'φ'],
    'Q': ['q', '(,)', '0,', '0.', '0_', '9', '<|', '¶', '(_,)', '()_', 'cue', 'O,', '(),', 'φ'],
    'r': ['R', '1²', '2', '?', 'P\\', '[z', 'lz', '|-', '|2', '|?', '®', '12', '/2', 'I2', '|^', '|~', '(r)', '|`', 'l2', 'Я', 'ʁ', 'я'],
    'R': ['r', '1²', '2', '?', 'P\\', '[z', 'lz', '|-', '|2', '|?', '®', '12', '/2', 'I2', '|^', '|~', '(r)', '|`', 'l2', 'Я', 'ʁ', 'я'],
    's': ['S', '$', '5', 'z', '§', 'ehs', 'es', 'ez'],
    'S': ['s', '$', '5', 'z', '§', 'ehs', 'es', 'ez'],
    't': ['T', '\']\'', '\'][\'', '+', '-|-', '1', '7', '7`', '|', '~|~', '†', 'τ'],
    'T': ['t', '\']\'', '\'][\'', '+', '-|-', '1', '7', '7`', '|', '~|~', '†', 'τ'],
    'u': ['U', 'v', 'V', '(_)', '/_/', 'I_I', '[[_]]', '[]_[]', '\/', '\_/', '\_\\', ']_[', 'v', '|_|', 'µ', 'M', 'Y3W', 'L|', '[_]', 'μ'],
    'U': ['u', 'v', 'V', '(_)', '/_/', 'I_I', '[[_]]', '[]_[]', '\/', '\_/', '\_\\', ']_[', 'v', '|_|', 'µ', 'M', 'Y3W', 'L|', '[_]', 'μ'],
    'v': ['V', 'u', 'U', '\/', '\\'+'\\'+'/', '\\'+'\\'+'//', '√', '\\//', '\_/'],
    'V': ['v', 'u', 'U', '\/', '\\'+'\\'+'/', '\\'+'\\'+'//', '√', '\\//', '\_/'],
    'w': ['W', 'vv', 'VV', '//', '(/\)', '(n)', '///', 'I_I_I', 'I_LI', 'UU', 'uu', 'VV', 'vv', '\/\/', '\V/', '\\/\//', '\\/\\/', '\^/', 'i_i_i', '|/\|', '[/\]', 'LI_I', "\\'", '\X/', '\|/', '\_|_/', '\\//\\//', '\_:_/', ']I[', 'LL1', 'Ш', 'ɰ', 'ω'],
    'W': ['w', 'vv', 'VV', '//', '(/\)', '(n)', '///', 'I_I_I', 'I_LI', 'UU', 'uu', 'VV', 'vv', '\/\/', '\V/', '\\/\//', '\\/\\/', '\^/', 'i_i_i', '|/\|', '[/\]', 'LI_I', "\\'", '\X/', '\|/', '\_|_/', '\\//\\//', '\_:_/', ']I[', 'LL1', 'Ш', 'ɰ', 'ω'],
    'x': ['X', '%', ')(', '><', '>><<', '}{', '×', 'Ж', 'ecks', '*', 'ex', 'χ'],
    'X': ['x', '%', ')(', '><', '>><<', '}{', '×', 'Ж', 'ecks', '*', 'ex', 'χ'],
    'y': ['Y', "'/", 'V/', '\-/', '_v', '`/', 'j', '¥', '°/', '9', '`(', '-/', 'Ψ', 'φ', 'λ', 'Ч'],
    'Y': ['y', "'/", 'V/', '\-/', '_v', '`/', 'j', '¥', '°/', '9', '`(', '-/', 'Ψ', 'φ', 'λ', 'Ч'],
    'z': ['Z', '"/_', '2', '~/_', '~\_', '%', '>_', 'ʒ', '7_', 'ζ'],
    'Z': ['z', '"/_', '2', '~/_', '~\_', '%', '>_', 'ʒ', '7_', 'ζ'],
}

simple = {
    '0': ['o', 'O', '()', '*', '0', '¤', '°', 'ø', 'Ω', 'ο'],
    '1': ['i', 'I', 'l', '!', '|'],
    '2': ['s', 'S', '$', '5', 'z'],
    '3': ['b', 'B', '8'],
    '4': ['a', 'A'],
    '5': ['s', 'S', '$', '5', 'z'],
    '6': ['b', 'B'],
    '7': ['j', 'J'],
    '8': ['b', 'B'],
    '9': ['g', 'G', '6'],
    'a': ['A', '4', '@', '/\\', '/-\\', '^'],
    'A': ['a', '4', '@', '/\\', '/-\\', '^'],
    'b': ['B', '8', '|3', '13', 'I3', 'IX', ']3', ']8', ']]3', '|3', '|8'],
    'B': ['b', '8', '|3', '13', 'I3', 'IX', ']3', ']8', ']]3', '|3', '|8'],
    'c': ['C', '(', '<', '[', '{'],
    'C': ['c', '(', '<', '[', '{'],
    'd': ['D', '[)', '[>', '[}', '|)', '|>', '|}'],
    'D': ['d', '[)', '[>', '[}', '|)', '|>', '|}'],
    'e': ['E', '3', '€', 'ë'],
    'E': ['e', '3', '€', 'ë'],
    'f': ['F', '|#', '|='],
    'F': ['f', '|#', '|='],
    'g': ['G', '6'],
    'G': ['g', '6'],
    'h': ['H', '#', '(-)', ')-(', '/-/', '4', '[-]', '\-\\', ']-[', ']~[', '{-}', '{=}', '|-|', '|~|', '}{', ':-:', '}-{'],
    'H': ['h', '#', '(-)', ')-(', '/-/', '4', '[-]', '\-\\', ']-[', ']~[', '{-}', '{=}', '|-|', '|~|', '}{', ':-:', '}-{'],
    'i': ['I', 'l', '!', '1', '|', '¦', '¡'],
    'I': ['i', 'l', '!', '1', '|', '¦', '¡'],
    'j': ['J', '7', '_|', '_/'],
    'J': ['j', '7', '_|', '_/'],
    'k': ['K', ']{', '|(', '|<', '|{', '}<'],
    'K': ['k', ']{', '|(', '|<', '|{', '}<'],
    'l': ['L', '1', '!', 'i', '1', '][_', '|_', '1_'],
    'L': ['l', '1', '!', 'i', '1', '][_', '|_', '1_'],
    'm': ['M', '(\/)', '/V\\', '/\/\\', '/\\'+'\\'+'/\\'+'\\', 'ITI', 'IVI', '[V]', '[\/]', '][\\'+'\\'+'//][', '{V}', '|\/|', '|v|', ']V[', '//\\'+'\\'+'//\\'+'\\', '(V)', '/^^\\', '|^^|'],
    'M': ['M', '(\/)', '/V\\', '/\/\\', '/\\'+'\\'+'/\\'+'\\', 'ITI', 'IVI', '[V]', '[\/]', '][\\'+'\\'+'//][', '{V}', '|\/|', '|v|', ']V[', '//\\'+'\\'+'//\\'+'\\', '(V)', '/^^\\', '|^^|'],
    'n': ['N', '(\)', '/\/', '/\\'+'\\'+'/', ']\[', '{\}', '|\\'+'\\'+'|', '|\|', '//\\'+'\\'+'//', '/V'],
    'N': ['n', '(\)', '/\/', '/\\'+'\\'+'/', ']\[', '{\}', '|\\'+'\\'+'|', '|\|', '//\\'+'\\'+'//', '/V'],
    'o': ['O', '()', '*', '0', '9', '<>', '[]', '°' 'ο'],
    'O': ['o', '()', '*', '0', '9', '<>', '[]', '°', 'ο'],
    'p': ['P', '|*', '|>', '|?', '|D', '|o', '|°', '|º', 'q'],
    'P': ['p', '|*', '|>', '|?', '|D', '|o', '|°', '|º', 'q'],
    'q': ['Q', '(,)', '0,', '0.', '0_', '()_', 'O,', '(),'],
    'Q': ['q', '(,)', '0,', '0.', '0_', '()_', 'O,', '(),'],
    'r': ['R', '1²'],
    'R': ['r', '1²'],
    's': ['S', '$', '5', 'z'],
    'S': ['s', '$', '5', 'z'],
    't': ['T'],
    'T': ['t'],
    'u': ['U', 'v', 'V', '(_)', '/_/', 'I_I', '\/', '\_/', 'v', '|_|'],
    'U': ['u', 'v', 'V', '(_)', '/_/', 'I_I', '\/', '\_/', 'v', '|_|'],
    'v': ['V', 'u', 'U', '\/', '\_/'],
    'V': ['v', 'u', 'U', '\/', '\_/'],
    'w': ['W', 'vv', 'VV', 'UU', 'uu', 'VV', 'vv', '\/\/', '\V/', '\\/\\/', '\^/', '|/\|', '\X/', '\|/'],
    'W': ['w', 'vv', 'VV', 'UU', 'uu', 'VV', 'vv', '\/\/', '\V/', '\\/\\/', '\^/', '|/\|', '\X/', '\|/'],
    'x': ['X', '%', ')(', '><', '>><<', '}{'],
    'X': ['x', '%', ')(', '><', '>><<', '}{'],
    'y': ['Y', "'/", '`/'],
    'Y': ['y', "'/", '`/'],
    'z': ['Z', '2'],
    'Z': ['z', '2'],
}


def remove_duplicates():
    '''
    Due to dictionary generation during iteration sometimes duplicates are added to the output file and must be removed
    '''
    uniqlines = set(open(args.output_file, 'r').readlines())
    file = open(args.output_file, 'w').writelines(set(uniqlines))


def permute_word(dictWord, dictionary_type):
    if len(dictWord) > 0:
        currentLetter = dictWord[0]
        restOfWord = dictWord[1:]

        if dictionary_type == "simple":
            if currentLetter in simple:
                substitutions = simple[currentLetter] + [currentLetter]
                # print(substitutions)
            else:
                substitutions = [currentLetter]
                # print(substitutions)
        elif dictionary_type == "complex":
            if currentLetter in complex:
                substitutions = complex[currentLetter] + [currentLetter]
                # print(substitutions)
            else:
                substitutions = [currentLetter]
                # print(substitutions)
        else:
            print("parameter simple/complex is mandatory.")

        if len(restOfWord) > 0:
            permutations = [
                s + p for s in substitutions for p in permute_word(restOfWord, dictionary_type)]
            # print(perms)
        else:
            permutations = substitutions
            # print(perms)

        return permutations


parser = argparse.ArgumentParser(description='Permutate words of a wordlist.')
parser.add_argument('input_file', help='Input wordlist file')
parser.add_argument('output_file', help='Ouput permuted l33t wordlist file')
parser.add_argument('dictionary_type', help='simple or complex')

args = parser.parse_args()

input_txt = open(args.input_file, 'r')
wordsToPermute = input_txt.read().splitlines()
input_txt.close()

output_txt = open(args.output_file, "w", encoding='utf8')

print("Generating dictionary...")


for permuteWord in wordsToPermute:
    output_txt.writelines(
        [p + '\n' for p in permute_word(permuteWord, args.dictionary_type)])

output_txt.close()
remove_duplicates()

print("Work finished.")
